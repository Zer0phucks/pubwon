{
  "id": "63382dc2-9b8e-4a0c-a121-fb726abac5d4",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.blog_posts": {
      "name": "blog_posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "repository_id": {
          "name": "repository_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "excerpt": {
          "name": "excerpt",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "seo_metadata": {
          "name": "seo_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_published": {
          "name": "is_published",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "published_at": {
          "name": "published_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "blog_posts_repository_id_idx": {
          "name": "blog_posts_repository_id_idx",
          "columns": [
            {
              "expression": "repository_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "blog_posts_slug_idx": {
          "name": "blog_posts_slug_idx",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "blog_posts_repository_id_repositories_id_fk": {
          "name": "blog_posts_repository_id_repositories_id_fk",
          "tableFrom": "blog_posts",
          "tableTo": "repositories",
          "columnsFrom": [
            "repository_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "blog_posts_slug_unique": {
          "name": "blog_posts_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      }
    },
    "public.email_subscribers": {
      "name": "email_subscribers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "confirmed_at": {
          "name": "confirmed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "unsubscribed_at": {
          "name": "unsubscribed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "email_subscribers_email_idx": {
          "name": "email_subscribers_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "email_subscribers_email_unique": {
          "name": "email_subscribers_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    },
    "public.github_issues": {
      "name": "github_issues",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "repository_id": {
          "name": "repository_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "pain_point_id": {
          "name": "pain_point_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "github_issue_number": {
          "name": "github_issue_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "github_issue_id": {
          "name": "github_issue_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "body": {
          "name": "body",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'open'"
        },
        "labels": {
          "name": "labels",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "github_issues_repository_id_idx": {
          "name": "github_issues_repository_id_idx",
          "columns": [
            {
              "expression": "repository_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "github_issues_pain_point_id_idx": {
          "name": "github_issues_pain_point_id_idx",
          "columns": [
            {
              "expression": "pain_point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "github_issues_repository_id_repositories_id_fk": {
          "name": "github_issues_repository_id_repositories_id_fk",
          "tableFrom": "github_issues",
          "tableTo": "repositories",
          "columnsFrom": [
            "repository_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "github_issues_pain_point_id_pain_points_id_fk": {
          "name": "github_issues_pain_point_id_pain_points_id_fk",
          "tableFrom": "github_issues",
          "tableTo": "pain_points",
          "columnsFrom": [
            "pain_point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.icp_personas": {
      "name": "icp_personas",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "repository_id": {
          "name": "repository_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "demographics": {
          "name": "demographics",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "goals": {
          "name": "goals",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "pain_points": {
          "name": "pain_points",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "use_cases": {
          "name": "use_cases",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "icp_personas_repository_id_idx": {
          "name": "icp_personas_repository_id_idx",
          "columns": [
            {
              "expression": "repository_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "icp_personas_repository_id_repositories_id_fk": {
          "name": "icp_personas_repository_id_repositories_id_fk",
          "tableFrom": "icp_personas",
          "tableTo": "repositories",
          "columnsFrom": [
            "repository_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.newsletters": {
      "name": "newsletters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "repository_id": {
          "name": "repository_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "blog_post_id": {
          "name": "blog_post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "subject": {
          "name": "subject",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "html_content": {
          "name": "html_content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sent_at": {
          "name": "sent_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "recipient_count": {
          "name": "recipient_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "newsletters_repository_id_idx": {
          "name": "newsletters_repository_id_idx",
          "columns": [
            {
              "expression": "repository_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "newsletters_repository_id_repositories_id_fk": {
          "name": "newsletters_repository_id_repositories_id_fk",
          "tableFrom": "newsletters",
          "tableTo": "repositories",
          "columnsFrom": [
            "repository_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "newsletters_blog_post_id_blog_posts_id_fk": {
          "name": "newsletters_blog_post_id_blog_posts_id_fk",
          "tableFrom": "newsletters",
          "tableTo": "blog_posts",
          "columnsFrom": [
            "blog_post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.pain_points": {
      "name": "pain_points",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "icp_persona_id": {
          "name": "icp_persona_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reddit_discussion_id": {
          "name": "reddit_discussion_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "severity": {
          "name": "severity",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "frequency": {
          "name": "frequency",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "reviewed_at": {
          "name": "reviewed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "pain_points_icp_persona_id_idx": {
          "name": "pain_points_icp_persona_id_idx",
          "columns": [
            {
              "expression": "icp_persona_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pain_points_status_idx": {
          "name": "pain_points_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "pain_points_icp_persona_id_icp_personas_id_fk": {
          "name": "pain_points_icp_persona_id_icp_personas_id_fk",
          "tableFrom": "pain_points",
          "tableTo": "icp_personas",
          "columnsFrom": [
            "icp_persona_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pain_points_reddit_discussion_id_reddit_discussions_id_fk": {
          "name": "pain_points_reddit_discussion_id_reddit_discussions_id_fk",
          "tableFrom": "pain_points",
          "tableTo": "reddit_discussions",
          "columnsFrom": [
            "reddit_discussion_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.reddit_discussions": {
      "name": "reddit_discussions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "subreddit_id": {
          "name": "subreddit_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reddit_post_id": {
          "name": "reddit_post_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "author": {
          "name": "author",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "num_comments": {
          "name": "num_comments",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "raw_data": {
          "name": "raw_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "scraped_at": {
          "name": "scraped_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "reddit_discussions_subreddit_id_idx": {
          "name": "reddit_discussions_subreddit_id_idx",
          "columns": [
            {
              "expression": "subreddit_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "reddit_discussions_scraped_at_idx": {
          "name": "reddit_discussions_scraped_at_idx",
          "columns": [
            {
              "expression": "scraped_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "reddit_discussions_subreddit_id_subreddits_id_fk": {
          "name": "reddit_discussions_subreddit_id_subreddits_id_fk",
          "tableFrom": "reddit_discussions",
          "tableTo": "subreddits",
          "columnsFrom": [
            "subreddit_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "reddit_discussions_reddit_post_id_unique": {
          "name": "reddit_discussions_reddit_post_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "reddit_post_id"
          ]
        }
      }
    },
    "public.repositories": {
      "name": "repositories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "github_id": {
          "name": "github_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "analysis_data": {
          "name": "analysis_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "repositories_user_id_idx": {
          "name": "repositories_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "repositories_user_id_users_id_fk": {
          "name": "repositories_user_id_users_id_fk",
          "tableFrom": "repositories",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.subreddits": {
      "name": "subreddits",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "icp_persona_id": {
          "name": "icp_persona_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscribers": {
          "name": "subscribers",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "relevance_score": {
          "name": "relevance_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "subreddits_icp_persona_id_idx": {
          "name": "subreddits_icp_persona_id_idx",
          "columns": [
            {
              "expression": "icp_persona_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subreddits_icp_persona_id_icp_personas_id_fk": {
          "name": "subreddits_icp_persona_id_icp_personas_id_fk",
          "tableFrom": "subreddits",
          "tableTo": "icp_personas",
          "columnsFrom": [
            "icp_persona_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "github_id": {
          "name": "github_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "github_username": {
          "name": "github_username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "github_access_token": {
          "name": "github_access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "preferred_ai_model": {
          "name": "preferred_ai_model",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'gpt-4o-mini'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "users_github_id_unique": {
          "name": "users_github_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "github_id"
          ]
        }
      }
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}